syntax = "proto3";
package pb;
option go_package = "./pb";
import "common.proto";

enum WsReceiveMessageBinaryType {
  ReceiveRequest = 0;
  ReceiveResponse = 1;
}

message WsReceiveMessageBinary {
  WsReceiveMessageBinaryType type = 1;
  bytes data = 2;
}

message SessionDescription {
  string sdp = 1;
  SDPType type = 2;
}

message GetSessionDescriptionReq {
  string appId = 1;
}

message GetSessionDescriptionResp {
  string appId = 1;
  SessionDescription sdp = 2;
}

//NodeReq 向node发起请求
message NodeReq {
  string appId = 1;
  string requestId = 2;
  map<string, string> headers = 3;
  string method = 4;
  bytes body = 5;
}

//NodeResp node返回的响应
message NodeResp {
  string appId = 1;
  string requestId = 2;
  map<string, string> headers = 3;
  int32 status = 4;
  bytes body = 5;
  string errMsg = 6;
}

service gatewayService {
  rpc GetSessionDescription(GetSessionDescriptionReq) returns (GetSessionDescriptionResp);
  rpc Node(NodeReq) returns (NodeResp);
}
